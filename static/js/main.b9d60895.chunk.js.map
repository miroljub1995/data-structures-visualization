{"version":3,"sources":["Components/Navigation/NavigationBar.jsx","Components/BinaryTree/TreeNode.jsx","Components/Variables/Variable.jsx","Components/Variables/Pointer.jsx","Components/BinaryTree/BinaryTree.jsx","Components/BinaryTree/BinaryTreeContainer.jsx","Components/BinarySearchTree/Operations.jsx","Components/Player/Player.jsx","Components/BinarySearchTree/Algorithms.jsx","Components/Pseudocode/Pseudocode.jsx","Components/KonvaContainer/KonvaContainer.jsx","Components/BinarySearchTree/BSTIndex.jsx","Components/MinHeap/Operations.jsx","Components/Array/HorizontalElement.jsx","Components/Array/HorizontalArray.jsx","Components/MinHeap/MinHeapContainer.jsx","Components/MinHeap/Algorithms.jsx","Components/MinHeap/MinHeapIndex.jsx","Components/App/App.jsx","registerServiceWorker.js","index.js"],"names":["NavigationBar","Component","render","Navbar","Header","Brand","href","Toggle","Collapse","Nav","to","NavItem","TreeNode","state","color","width","this","props","radius","height","x","y","fill","shadowBlur","text","val","align","verticalAlign","Variable","constructor","super","textWidthCalculated","componentDidMount","textNode","getTextWidth","setState","top","right","name","isNull","value","undefined","ref","node","cornerRadius","Pointer","rotation","middle","arrowPoints","offsetX","offsetY","points","stroke","pointerLength","pointerWidth","BinaryTree","getLeftSubTree","root","left","pointers","getRightSubTree","getArrowFromRootToChild","rootX","rootY","childX","childY","treeNodeRadius","getArrowPoints","getArrow","alfa","Math","atan","abs","d1","sin","d2","cos","y1","y2","getPointersToRoot","filter","pointer","rootVal","leftChildX","rightChildX","childWidth","childRootY","leftSubTree","rightSubTree","arrowToLeftSubTree","arrowToRightSubTree","pointersToRoot","pointersToRootLength","length","map","i","key","BinaryTreeContainer","getNullPointers","getRootPointer","w","h","getPointersToHangingNodes","hangingNodes","p","some","n","frame","rootPointer","nullPointers","hangingNodesWithPointers","pointerToNode","find","Operations","handleInsert","isInsertValueInvalid","onInsert","values","insertValue","split","regex","v","match","parseInt","handleInsertChange","sender","target","FormGroup","Grid","Row","Col","xs","sm","md","FormControl","style","borderColor","placeholder","onChange","Button","onClick","Player","timer","newFrameIndex","currentFrameIndex","frames","handleFrameIndexChange","handlePause","onNextFrame","handleSliderChange","event","clearInterval","intervalId","isPlaying","handlePlay","setInterval","handleNext","index","handlePrev","componentWillUnmount","componentWillReceiveProps","nextProps","framesLength","float","disabled","paddingLeft","paddingRight","padding","min","max","step","getPointersToTreeClone","cloneRoot","newRootPointers","ptr","leftPointers","rightPointers","concat","getPointersToHangingNodesClone","hangingNodesClone","result","filteredP","pushToFrames","pseudocode","currentLine","newRoot","JSON","parse","stringify","newHangingNodes","push","setPointerValue","newVal","createPointer","initVal","Pseudocode","componentDidUpdate","prevProps","selected","ReactDOM","findDOMNode","scrollIntoView","selectedLine","lines","rows","line","e","className","KonvaContainer","strokeWidth","children","BSTIndex","forEach","newNode","parentNode","currentNode","Insert2","currentFrame","handleNextFrame","handleDelete","onDelete","HorizontalElement","elementH","elementW","indexH","indexes","indexesLength","indexesView","HorizontalArray","array","arrayWidth","elements","indexesToThisElement","MinHeapContainer","heap","variablesView","variables","binaryTreeFrame","getBinaryTreeFrame","createVariable","setVariable","createIndex","setIndex","getBinaryTreeFrameHelper","leftSubtreeFrame","rightSubtreeFrame","pointersToThisNode","MinHeapIndex","parent","floor","Insert","last","Delete","Array","App","Switch","Route","exact","path","component","id","Home","NotFound","Link","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2WAIe,MAAMA,UAAsBC,YACvCC,SACI,OAAQ,kBAACC,EAAA,EAAD,KACJ,kBAACA,EAAA,EAAOC,OAAR,KACI,kBAACD,EAAA,EAAOE,MAAR,KACI,uBAAGC,KAAK,mCAAR,iCAEJ,kBAACH,EAAA,EAAOI,OAAR,OAEJ,kBAACJ,EAAA,EAAOK,SAAR,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,qBAAD,CAAoBC,GAAG,mCACnB,kBAACC,EAAA,EAAD,cAEJ,kBAAC,qBAAD,CAAoBD,GAAG,mDACnB,kBAACC,EAAA,EAAD,aAEJ,kBAAC,qBAAD,CAAoBD,GAAG,0CACnB,kBAACC,EAAA,EAAD,qB,qDCnBxB,MAAMC,UAAiBX,YACtB,eAAD,oBACEY,MAAQ,CACNC,MAAO,SAFX,KAKEC,MAA0B,EAApBC,KAAKC,MAAMC,OALnB,KAMEC,OAA2B,EAApBH,KAAKC,MAAMC,OAElBhB,SACE,OACE,kBAAC,QAAD,KACE,kBAAC,SAAD,CACEkB,EAAGJ,KAAKC,MAAMG,EACdC,EAAGL,KAAKC,MAAMI,EACdN,MAAOC,KAAKD,MACZI,OAAQH,KAAKG,OACbG,KAAMN,KAAKH,MAAMC,MACjBS,WAAY,IAEd,kBAAC,OAAD,CACEH,EAAGJ,KAAKC,MAAMG,EAAEJ,KAAKD,MAAM,EAC3BM,EAAGL,KAAKC,MAAMI,EAAEL,KAAKG,OAAO,EAC5BK,KAAI,UAAKR,KAAKC,MAAMQ,KACpBC,MAAM,SACNC,cAAc,SACdZ,MAAOC,KAAKD,MACZI,OAAQH,KAAKG,WAORP,QClCA,MAAMgB,UAAiB3B,YACpC4B,YAAYZ,GACVa,MAAMb,GACND,KAAKH,MAAS,CACZkB,qBAAqB,GAGzBC,oBACE,GAAGhB,KAAKH,MAAMkB,oBACZ,OACF,MAAMhB,EAAQC,KAAKiB,SAASC,eAC5BlB,KAAKmB,SAAS,CAACJ,qBAAqB,EAAMhB,MAAOA,IAEnDb,SAAU,MAAD,EAC2Cc,KAAKC,MAAhDmB,EADA,EACAA,IAAKC,EADL,EACKA,MAAOlB,EADZ,EACYA,OAAQmB,EADpB,EACoBA,KAAMC,EAD1B,EAC0BA,OAAQC,EADlC,EACkCA,MACzC,IAAIhB,EAOJ,GALEA,EADCe,EACG,UAAMD,EAAN,eACYG,IAAVD,EACF,UAAMF,EAAN,cAAgBE,GAEhB,UAAMF,IACRtB,KAAKH,MAAMkB,oBACb,OAAQ,kBAAC,OAAD,CAAMW,IAAKC,IAAS3B,KAAKiB,SAAWU,GAAQxB,OAAQA,EAAQK,KAAMA,IAC5E,MAAMT,EAAQC,KAAKH,MAAME,MAEzB,OACE,kBAAC,QAAD,KACE,kBAAC,OAAD,CAAMK,EAAGiB,EAAQtB,EAAQ,EAAuBM,EAAGe,EAAKrB,MAAOA,EAAQ,EAAuBI,OAAQA,EAAQG,KAAK,SAASsB,aAAc,EAAGrB,WAAY,IACzJ,kBAAC,OAAD,CACEmB,IAAKC,IACH3B,KAAKiB,SAAWU,GAEjBvB,EAAGiB,EAAQtB,EARQ,EAQmBM,EAAGe,EAAKrB,MAAOA,EAAOI,OAAQA,EACpEO,MAAM,SACNC,cAAc,SACfH,KAAMA,MCnCD,MAAMqB,UAAgB5C,YACnCC,SAAU,MAAD,EAOHc,KAAKC,MALPoB,EAFK,EAELA,MACAlB,EAHK,EAGLA,OACAiB,EAJK,EAILA,IACAE,EALK,EAKLA,KALK,IAMLQ,gBANK,MAMM,EANN,EAQP,IAAIC,EAASX,EAAMjB,EAAS,EAExB6B,EAAc,CAChBX,EAFe,GAGfU,EACAV,EACAU,GAEF,OAAQ,kBAAC,QAAD,CAAOE,SAAUZ,EAAOa,SAAUH,GACxC,kBAAC,QAAD,CAAOD,SAAUA,EAAUG,QAASZ,EAAOa,QAASH,GAClD,kBAAC,QAAD,CAAOI,OAAQH,EAAaI,OAAO,MAAM9B,KAAK,MAAMF,EAAG,EAAGC,EAAG,EAAGgC,cAAe,EAAGC,aAAc,EAAG/B,WAAY,IAC/G,kBAAC,EAAD,CAAUJ,OAAQA,EAAQkB,MAAOA,EAVpB,GAUwCD,IAAKA,EAAKE,KAAMA,OCnB9D,MAAMiB,UAAmBtD,YAEtCuD,eAAepC,EAAGC,EAAGN,GACnB,OAA6B,OAAzBC,KAAKC,MAAMwC,KAAKC,KACV,kBAAC,EAAD,CAAYC,SAAU3C,KAAKC,MAAM0C,SAAUF,KAAMzC,KAAKC,MAAMwC,KAAKC,KAAMtC,EAAGA,EAAGC,EAAGA,EAAGN,MAAOA,IAC7F,KAGT6C,gBAAgBxC,EAAGC,EAAGN,GACpB,OAA8B,OAA1BC,KAAKC,MAAMwC,KAAKpB,MACV,kBAAC,EAAD,CAAYsB,SAAU3C,KAAKC,MAAM0C,SAAUF,KAAMzC,KAAKC,MAAMwC,KAAKpB,MAAOjB,EAAGA,EAAGC,EAAGA,EAAGN,MAAOA,IAC9F,KAGT8C,wBAAwBC,EAAOC,EAAOC,EAAQC,EAAQC,GACpD,IAAIf,EAASnC,KAAKmD,eAAeL,EAAOC,EAAOC,EAAQC,EAAQC,GAC/D,OAAOlD,KAAKoD,SAASjB,GAGvBgB,eAAeL,EAAOC,EAAOC,EAAQC,EAAQC,GAC3C,IAAIG,EAAOC,KAAKC,KAAKD,KAAKE,KAAKV,EAAQE,IAAWD,EAAQE,KACtDQ,EAAKP,EAAiBI,KAAKI,IAAIL,GAC/BM,EAAKT,EAAiBI,KAAKM,IAAIP,GAC/BQ,EAAKd,EAAQY,EACbG,EAAKb,EAASU,EAOlB,OANIb,EAAQE,IACVS,GAAMA,EACNE,GAAMA,GAID,CAFEb,EAAQW,EAELI,EADHb,EAASS,EACEK,GAGtBV,SAASjB,GACP,OAAQ,kBAAC,QAAD,CAAOA,OAAQA,EAAQC,OAAO,QAAQ9B,KAAK,UAGrDyD,kBAAkBpB,EAAW,IAE3B,OADeA,EAASqB,OAAOC,GAAWA,EAAQA,UAAYjE,KAAKC,MAAMwC,MAI3EvD,SAAS,QAI+Bc,KAAKC,MAApCG,EAJA,EAIAA,EAAGC,EAJH,EAIGA,EAAGoC,EAJN,EAIMA,KAAM1C,EAJZ,EAIYA,MAAO4C,EAJnB,EAImBA,SAE1B,GAAa,OAATF,EACF,OAAO,KAET,IAAIK,EAAQ1C,EACR2C,EAAQ1C,EATS,GAUjB6D,EAAUzB,EAAKhC,IAEf0D,EAAa/D,EAAIL,EAAQ,EACzBqE,EAAchE,EAAIL,EAAQ,EAC1BsE,EAAatE,EAAQ,EACrBkD,EAAS5C,EAdU,GAenBiE,EAAavB,EAfM,GAiBnBwB,EAAcvE,KAAKwC,eAAe2B,EAAYlB,EAAQoB,GACtDG,EAAexE,KAAK4C,gBAAgBwB,EAAanB,EAAQoB,GACzDI,EAAqB,KACrBC,EAAsB,KAEN,OAAhBH,IACFE,EAAqBzE,KAAK6C,wBAAwBC,EAAOC,EAAOoB,EAAYG,EAxBzD,KA0BA,OAAjBE,IACFE,EAAsB1E,KAAK6C,wBAAwBC,EAAOC,EAAOqB,EAAaE,EA3B3D,KA6BrB,IAAIK,EAAiB3E,KAAK+D,kBAAkBpB,GACxCiC,EAAuBD,EAAeE,OAY1C,OAVAF,EAAiBA,EAAeG,IAAI,CAACb,EAASc,IACpC,kBAAC,EAAD,CACEjD,UAHQ,IAGG8C,EAAuB,EAAI,EAAIG,GAC1CC,IAAKf,EAAQ3C,KACbA,KAAM2C,EAAQ3C,KACdD,MAAOyB,EArCE,GAsCT1B,IAAK2B,EAAQG,IACb/C,OAvCS,MA0Cb,kBAAC,QAAD,KACN,kBAAC,EAAD,CAAUM,IAAKyD,EAAS9D,EAAG0C,EAAOzC,EAAG0C,EAAO7C,OA3CzB,KA4ClBwE,EACAD,EACAF,EACAC,EACAG,IC1FQ,MAAMM,UAA4BhG,YAE/CiG,gBAAgBvC,EAAW,IACzB,OAAOA,EAASqB,OAAOC,IAAYA,EAAQA,SAG7CkB,eAAe5D,GAAS,MACfxB,EAASC,KAAKC,MAAdF,MACAqF,EACF,GADKC,EAEL,GAGCjF,EAAIL,EAAQ,EAAIqF,EAAI,EAE1B,OAAI7D,EACM,kBAAC,QAAD,KACN,kBAAC,OAAD,CAAMnB,EAAGA,EAAGC,EALM,GAKAN,MAAOqF,EAAGjF,OAAQkF,EAAG/E,KAAK,OAAOC,WAAY,IAC/D,kBAAC,OAAD,CAAMH,EAAGA,EAAGC,EANM,GAMAC,KAAK,QAAQE,KAAK,OAAOE,MAAM,SAASC,cAAc,SAASZ,MAAOqF,EAAGjF,OAAQkF,KAE/F,kBAAC,QAAD,KACN,kBAAC,OAAD,CAAMjF,EAAGA,EAAGC,EATQ,GASFN,MAAOqF,EAAGjF,OAAQkF,EAAG/E,KAAK,OAAOC,WAAY,IAC/D,kBAAC,OAAD,CAAMH,EAAGA,EAAGC,EAVQ,GAUFC,KAAK,QAAQE,KAAK,OAAOE,MAAM,SAASC,cAAc,SAASZ,MAAOqF,EAAGjF,OAAQkF,IACnG,kBAAC,QAAD,CAAOlD,OAAQ,CACXpC,EAAQ,EAZQ,GAaZsF,EACJtF,EAAQ,EACR,IACCqC,OAAO,QAAQ9B,KAAK,WAI7BgF,0BAA0BC,EAAc5C,GACtC,OAAOA,EAASqB,OAAOwB,GAAKD,EAAaE,KAAKC,GAAKF,EAAEvB,UAAYyB,IAGnExG,SAAU,MAAD,EAC0Cc,KAAKC,MAAM0F,MAArDlD,EADA,EACAA,KADA,IACME,gBADN,MACiB,GADjB,MACqB4C,oBADrB,MACoC,GADpC,IAEkBvF,KAAKC,MAAvBF,EAFA,EAEAA,MAFA,IAEOqB,WAFP,MAEa,EAFb,EAGDwE,EAAc5F,KAAKmF,eAAwB,OAAT1C,GACxC,IAAIoD,EAAe7F,KAAKkF,gBAAgBvC,GACxCkD,EAAeA,EAAaf,IAAI,CAACb,EAASc,IAChC,kBAAC,EAAD,CAAUC,IAAKf,EAAQ3C,KAAMA,KAAM2C,EAAQ3C,KAAMC,QAAQ,EAAMF,MAAOtB,EAAQ,GAAIqB,IAAS,GAAJ2D,EAAS,EAAG5E,OAAQ,MAErH,IAAI2F,EAA2BP,EAAaT,IAAI,CAACnD,EAAMoD,KACrD,IAAIgB,EAAgBpD,EAASqD,KAAKR,GAAKA,EAAEvB,UAAYtC,GAEjDvB,EAAIL,EAAQ,IACZM,EAAQ,GAAJ0E,EAAS,GACjB,OAAQ,kBAAC,QAAD,CAAOC,IAAKrD,GAClB,kBAAC,EAAD,CAAUlB,IAAKkB,EAAKlB,IAAKL,EAAGA,EAAGC,EAAGA,EAAGH,OAAQ,KAC7C,kBAAC,EAAD,CAAS4B,SAAU,EAAGkD,IAAKe,EAAczE,KAAMA,KAAMyE,EAAczE,KAAMD,MAAOjB,EAL7D,GAKiFgB,IAAKf,EAAI6C,IAAoB/C,OAL9G,QAUvB,OAAQ,kBAAC,QAAD,CAAOE,EAAGe,GAChB,kBAAC,EAAD,CAAkBuB,SAAUA,EAAUF,KAAMA,EAAM1C,MAAOA,EAAM,IAAKK,EAAGL,EAAQ,EAAGM,EAAG,KACpFuF,EACAC,EACAC,I,iDCzDQ,MAAMG,UAAmBhH,YACtC4B,YAAYZ,GACVa,MAAMb,GADW,KAQnBiG,aAAe,KAEblG,KAAKmB,SAAS,CAACgF,sBAAsB,IAFlB,MAGZC,EAAYpG,KAAKC,MAAjBmG,SACDC,EAASrG,KAAKH,MAAMyG,YAAYC,MAAM,KACtCC,EAAQ,UACVH,EAAOZ,KAAKgB,IAAIA,EAAEC,MAAMF,IAC1BxG,KAAKmB,SAAS,CAACgF,sBAAsB,KAGvCnG,KAAKmB,SAAS,CAACmF,YAAa,KAC5BF,EAASC,EAAOvB,IAAI2B,GAAGE,SAASF,OAnBf,KAsBnBG,mBAAsBC,IACpB,MAAMrG,EAAOqG,EAAOC,OAAOtF,MAC3BxB,KAAKmB,SAAS,CAACmF,YAAa9F,KAtB5BR,KAAKH,MAAQ,CACXyG,YAAa,GACbH,sBAAsB,GAuB1BjH,SACE,OAAQ,6BACN,kBAAC6H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,MAAOvH,KAAKH,MAAMsG,qBAAuB,CAACqB,YAAa,OAAS,GAAIhG,MAAOxB,KAAKH,MAAMyG,YAAamB,YAAY,oBAAoBC,SAAU1H,KAAK4G,sBAEjK,kBAACM,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAQC,QAAS5H,KAAKkG,cAAtB,gB,sBC3CC,MAAM2B,UAAe5I,YAClC4B,YAAYZ,GACVa,MAAMb,GADW,KAkCnB6H,MAAQ,KACN,MAAMC,EAAgB/H,KAAKH,MAAMmI,kBAAoB,EACjDD,EAAgB/H,KAAKH,MAAMoI,OAAOpD,OACpC7E,KAAKkI,uBAAuBH,GAE5B/H,KAAKmI,eAvCU,KA2CnBD,uBAA0B1G,IACxBxB,KAAKmB,SAAS,CAAC6G,kBAAmBxG,IAClCxB,KAAKC,MAAMmI,YAAYpI,KAAKH,MAAMoI,OAAOzG,KA7CxB,KAgDnB6G,mBAAqB,CAACC,EAAO9G,KAC3BxB,KAAKkI,uBAAuB1G,IAjDX,KAoDnB2G,YAAc,KACZI,cAAcvI,KAAKH,MAAM2I,YACzBxI,KAAKmB,SAAS,CAACsH,WAAW,KAtDT,KAyDnBC,WAAa,KACX,IAAIF,EAAaG,YAAY3I,KAAK8H,MAAO,KACzC9H,KAAKmB,SAAS,CAACqH,WAAYA,EAAYC,WAAW,KA3DjC,KA8DnBG,WAAa,KACX,MAAMC,EAAQ7I,KAAKH,MAAMmI,kBACzBhI,KAAKkI,uBAAuBW,EAAQ,IAhEnB,KAmEnBC,WAAa,KACX,MAAMD,EAAQ7I,KAAKH,MAAMmI,kBACzBhI,KAAKkI,uBAAuBW,EAAQ,IArEnB,MAGVZ,EAAUjI,KAAKC,MAAfgI,OAEPjI,KAAKH,MAAQ,CACX4I,WAAW,EACXR,OAAQA,EACRD,kBAAmB,GAIvBhH,oBACE,IAAIwH,EAAaG,YAAY3I,KAAK8H,MAAO,KACzC9H,KAAKmB,SAAS,CAACqH,WAAYA,IAC3BxI,KAAKC,MAAMmI,YAAYpI,KAAKH,MAAMoI,OAAOjI,KAAKH,MAAMmI,oBAGtDe,uBACER,cAAcvI,KAAKH,MAAM2I,YAG3BQ,0BAA0BC,GACxB,GAAIA,EAAUhB,SAAWjI,KAAKC,MAAMgI,OAClC,OACFM,cAAcvI,KAAKH,MAAM2I,YAHU,MAI5BP,EAAUgB,EAAVhB,OACPjI,KAAKmB,SAAS,CAACsH,WAAW,EAAMR,OAAQA,EAAQD,kBAAmB,IACnE,IAAIQ,EAAaG,YAAY3I,KAAK8H,MAAO,KACzC9H,KAAKmB,SAAS,CAACqH,WAAYA,IACvBP,EAAOpD,OAAS,GAClB7E,KAAKC,MAAMmI,YAAYH,EAAO,IAyClC/I,SAAU,MAAD,EACgCc,KAAKH,MAArCmI,EADA,EACAA,kBAAmBS,EADnB,EACmBA,UACXS,EAAgBlJ,KAAKH,MAAMoI,OAAnCpD,OAEP,OAAQ,yBAAK0C,MAAO,CAChBxH,MAAM,GAAD,OAAKC,KAAKC,MAAMF,MAAhB,MACLoJ,MAAO,SAET,yBAAK5B,MAAO,CACRxH,MAAO,WAGN0I,GAAa,kBAACd,EAAA,EAAD,CAAQJ,MAAO,CACvB4B,MAAO,QACNvB,QAAS5H,KAAK0I,YAFP,QAKdD,GAAa,kBAACd,EAAA,EAAD,CAAQJ,MAAO,CACtB4B,MAAO,QACNvB,QAAS5H,KAAKmI,aAFR,SAIf,kBAACR,EAAA,EAAD,CAAQJ,MAAO,CACX4B,MAAO,QACNC,SAAUX,GAAmC,IAAtBT,EAAyBJ,QAAS5H,KAAK8I,YAFnE,QAGA,kBAACnB,EAAA,EAAD,CAAQJ,MAAO,CACX4B,MAAO,QACNC,SAAUX,GAAaT,IAAuBkB,EAAe,EAAItB,QAAS5H,KAAK4I,YAFpF,SAIF,yBAAKrB,MAAO,CACRxH,MAAO,OACPsJ,YAAa,QACbC,aAAc,QAEhB,kBAAC,IAAD,CAAQ/B,MAAO,CACXgC,QAAS,YACR/H,MAAOwG,EAAmBwB,IAAK,EAAGC,IAAKP,EAAe,EAAGQ,KAAM,EAAGhC,SAAU1H,KAAKqI,wBChH9F,MAAMsB,EAAyB,CAAClH,EAAMmH,EAAWjH,KAC/C,IAAKF,EACH,MAAO,GACT,IACIoH,EADelH,EAASqB,OAAQvD,GAAQA,EAAIwD,UAAYxB,GACzBqC,IAAKgF,IAAD,CAAWxI,KAAMwI,EAAIxI,KAAM2C,QAAS2F,KACvEG,EAAeJ,EAAuBlH,EAAKC,KAAMkH,EAAUlH,KAAMC,GACjEqH,EAAgBL,EAAuBlH,EAAKpB,MAAOuI,EAAUvI,MAAOsB,GACxE,OAAOoH,EAAaE,OAAOJ,GAAiBI,OAAOD,IAG/CE,EAAiC,CAAC3E,EAAc4E,EAAmBxH,KACvE,IAAIyH,EAAS,GACb,IAAI,IAAIrF,EAAE,EAAGA,EAAIQ,EAAaV,OAAQE,IAAI,CACxC,IAAIsF,EAAY1H,EAASqB,OAAOwB,GAAGA,EAAEvB,UAAYsB,EAAaR,IAC9DqF,EAASA,EAAOH,OAAOI,EAAUvF,IAAIU,IAAG,CAAElE,KAAMkE,EAAElE,KAAM2C,QAASkG,EAAkBpF,OAErF,OAAOqF,GAGHE,EAAe,CAACrC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAYC,KACtE,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUnI,IACpCoI,EAAkBH,KAAKC,MAAMD,KAAKE,UAAUrF,IAChD0C,EAAO6C,KAAK,CACVrI,KAAMgI,EACNlF,aAAcsF,EACdlI,SAAUgH,EAAuBlH,EAAMgI,EAAS9H,GAAUsH,OAAOtH,EAASqB,OAAOwB,IAAIA,EAAEvB,UAAUgG,OAAOC,EAA+B3E,EAAcsF,EAAiBlI,IACtK4H,aACAC,iBAIEO,EAAkB,CAACpI,EAAUrB,EAAM0J,KACvC,IAAK,IAAIjG,EAAI,EAAGA,EAAIpC,EAASkC,OAAQE,IAC/BpC,EAASoC,GAAGzD,OAASA,IACvBqB,EAASoC,GAAK,CACZzD,KAAMA,EACN2C,QAAS+G,KAMXC,EAAgB,CAACtI,EAAUrB,EAAM4J,KACrCvI,EAASmI,KAAK,CAACxJ,OAAM2C,QAASiH,K,OCvCzB,MAAMC,UAAmBlM,YAE9B+B,oBACIhB,KAAKoL,qBAGTA,mBAAmBC,GACjB,GAAIrL,KAAKsL,SAAU,CACCC,IAASC,YAAYxL,KAAKsL,UAChCG,gBAAe,IAI/BvM,SAAU,MAAD,EAC6Bc,KAAKC,MAAlCO,EADA,EACAA,KAAMkL,EADN,EACMA,aAAcnE,EADpB,EACoBA,MACrBoE,EAAQnL,EAAKkG,MAAM,aACzB,IAAKiF,EACH,OAAO,KACT,MAAMC,EAAOD,EAAM7G,IAAI,CAAC+G,EAAM9G,IACxBA,IAAO2G,EAAe,EAChB,yBAAK1G,IAAKD,EAAGrD,IAAKoK,GAAK9L,KAAKsL,SAAWQ,EAAGC,UAAU,2BAC1D,yBAAKA,UAAU,eAAf,UAAiChH,EAAI,IACrC,yBAAKgH,UAAU,kBACb,yBAAKA,UAAU,QAAQF,KAGrB,yBAAK7G,IAAKD,EAAGgH,UAAU,kBAC7B,yBAAKA,UAAU,eAAf,UAAiChH,EAAI,IACrC,yBAAKgH,UAAU,kBACb,yBAAKA,UAAU,QAAQF,MAI7B,OAAQ,yBAAKE,UAAU,aAAaxE,MAAOA,GACzC,yBAAKwE,UAAU,oBACb,2CAEF,yBAAKA,UAAU,mBACZH,KCvCT,MAAMI,UAAuB/M,YAC3BC,SACE,OAAQ,kBAAC,QAAD,CAAOqI,MAAO,CAAC4B,MAAO,QAASpJ,MAAOC,KAAKC,MAAMF,MAAOI,OAAQH,KAAKC,MAAME,QACjF,kBAAC,QAAD,KACE,kBAAC,OAAD,CAAMiC,OAAO,QAAQ6J,YAAa,EAAGlM,MAAOC,KAAKC,MAAMF,MAAOI,OAAQH,KAAKC,MAAME,SAAUH,KAAKC,MAAMiM,YAM/FF,QCLA,MAAMG,UAAiBlN,YACpC4B,YAAYZ,GACVa,MAAMb,GADW,KAUnBiG,aAAgBG,IAEd,IAAI4B,EAAS,GACTxF,EAAOzC,KAAKH,MAAM4C,KACtB4D,EAAO+F,QAAS5K,IACdyG,EAASA,EAAOgC,OH8FC,EAACxH,EAAMhC,KAC5BgC,EAAOiI,KAAKC,MAAMD,KAAKE,UAAUnI,IACjC,MAAM8H,EAAU,0cAehB,IAAI8B,EAAU,CACZ5L,MACAiC,KAAM,KACNrB,MAAO,MAGL4G,EAAS,GACTtF,EAAW,CAAC,CAACrB,KAAM,UAAW2C,QAASoI,IACvC9G,EAAe,CAAC8G,GACpB/B,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAE/D,IAAI+B,EAAa,KACjBrB,EAActI,EAAU,aAAc2J,GACtChC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAE/D,IAAIgC,EAAc9J,EAIlB,IAHAwI,EAActI,EAAU,cAAe4J,GACvCjC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAExDgC,GACLjC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAE/DQ,EAAgBpI,EAAU,aAD1B2J,EAAaC,GAGbjC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAC3D9J,EAAM8L,EAAY9L,KACpB6J,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAC/DgC,EAAcA,EAAY7J,KAC1BqI,EAAgBpI,EAAU,cAAe4J,KAEzCjC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAC/DgC,EAAcA,EAAYlL,MAC1B0J,EAAgBpI,EAAU,cAAe4J,IAE3CjC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAmBjE,OAhBAD,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,GAC1D+B,GAIHhC,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,IAC3D9J,EAAM6L,EAAW7L,KACnB6J,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,IAC/D+B,EAAW5J,KAAO2J,IAElB/B,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,IAC/D+B,EAAWjL,MAAQgL,KATrB/B,EAAarC,EAAQxF,EAAM8C,EAAc5C,EAAU4H,EAAY,IAC/D9H,EAAO4J,GAWT/B,EAAarC,EAAQxF,EAAM,GAAIE,EAAU4H,EAAY,IACrDD,EAAarC,EAAQxF,EAAM,GAAI,GAAI8H,EAAY,GACxCtC,GGpKoBuE,CAAQ/J,EAAMjB,IACrCiB,EAAOwF,EAAOA,EAAOpD,OAAS,GAAGpC,OAEnCzC,KAAKmB,SAAS,CAACsB,OAAMwF,SAAQwE,aAAc,QAlB1B,KAqBnBC,gBAAmB/G,IACjB3F,KAAKmB,SAAS,CAACsL,aAAc9G,KApB7B3F,KAAKH,MAAQ,CACX4C,KAAM,KACNwF,OAAQ,GACRwE,aAAc,MAoBlBvN,SAAU,MAAD,EACwBc,KAAKH,MAA7BoI,EADA,EACAA,OAAQwE,EADR,EACQA,aAKf,OAAQ,6BACN,kBAAC,EAAD,CAAYrG,SAAUpG,KAAKkG,eAC1BlG,KAAKH,MAAM4M,cAAgB,kBAAC,EAAD,CAAgB1M,MALhC,IAK8CI,OAJ7C,KAI6D,kBAAC,EAAD,CAAqBwF,MAAO8G,EAAc1M,MALxG,IAKsHI,OAJrH,OAKZsM,GAAgB,kBAAC,EAAD,CAAYlF,MAAO,CAACxH,MAAO,QAASI,OAAQ,QAASgJ,MAAO,QAAS3I,KAAMiM,EAAalC,WAAYmB,aAAce,EAAajC,cAC9IvC,EAAOpD,OAAS,GAAM,kBAAC,EAAD,CAAQ9E,MAAO,KAAMkI,OAAQA,EAAQG,YAAapI,KAAK0M,oBClCtE,MAAMzG,UAAmBhH,YACtC4B,YAAYZ,GACVa,MAAMb,GADW,KAQnBiG,aAAe,KACblG,KAAKmB,SAAS,CAACgF,sBAAsB,IADlB,MAEZC,EAAYpG,KAAKC,MAAjBmG,SACDC,EAASrG,KAAKH,MAAMyG,YAAYC,MAAM,KACtCC,EAAQ,UACVH,EAAOZ,KAAKgB,IAAIA,EAAEC,MAAMF,IAC1BxG,KAAKmB,SAAS,CAACgF,sBAAsB,KAGvCnG,KAAKmB,SAAS,CAACmF,YAAa,KAC5BF,EAASC,EAAOvB,IAAI2B,GAAGE,SAASF,OAlBf,KAqBnBG,mBAAsBC,IACpB,MAAMrG,EAAOqG,EAAOC,OAAOtF,MAC3BxB,KAAKmB,SAAS,CAACmF,YAAa9F,KAvBX,KA0BnBmM,aAAe,KACb3M,KAAKC,MAAM2M,YAzBX5M,KAAKH,MAAQ,CACXyG,YAAa,GACbH,sBAAsB,GA0B1BjH,SACE,OAAQ,6BACN,kBAAC6H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,MAAOvH,KAAKH,MAAMsG,qBAAuB,CAACqB,YAAa,OAAS,GAAIhG,MAAOxB,KAAKH,MAAMyG,YAAamB,YAAY,oBAAoBC,SAAU1H,KAAK4G,sBAEjK,kBAACM,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAQC,QAAS5H,KAAKkG,cAAtB,WAEF,kBAACgB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAQC,QAAS5H,KAAK2M,cAAtB,qBCjDC,MAAME,UAA0B5N,YAC7CC,SAAS,MAAD,EACiEc,KAAKC,MAArEuB,EADD,EACCA,MAAOqH,EADR,EACQA,MAAOzH,EADf,EACeA,IAAKsB,EADpB,EACoBA,KAAMoK,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,SAAUC,EAD9C,EAC8CA,OAAQC,EADtD,EACsDA,QACtDC,EAAgBD,EAAQpI,OAExBsI,EAAcF,EAAQnI,IAAI,CAACgH,EAAG/G,IAC1B,kBAAC,EAAD,CACEjD,UAHU,IAGCoL,EAAgB,EAAI,EAAInI,GAAqB,GACxDC,IAAK8G,EAAExK,KACPA,KAAMwK,EAAExK,KACRD,MAAOqB,EAAOqK,EAAS,EACvB3L,IAAKA,EAAM4L,EAASF,EACpB3M,OAAQ2M,EAAS,KAG7B,OAAQ,kBAAC,QAAD,KACN,kBAAC,OAAD,CAAMtM,KAAI,UAAKqI,GAASzI,EAAGsC,EAAMrC,EAAGe,EAAKrB,MAAOgN,EAAU5M,OAAQ6M,EAAStM,MAAM,SAASC,cAAc,WACxG,kBAAC,OAAD,CAAML,UAAgBmB,IAAVD,GAAiC,OAAVA,EAAiB,QAAU,SAAUpB,EAAGsC,EAAMrC,EAAGe,EAAM4L,EAAQjN,MAAOgN,EAAU5M,OAAQ2M,EAAU1K,OAAO,OAAO6J,YAAa,SACrJxK,IAAVD,GAAiC,OAAVA,GAAkB,kBAAC,OAAD,CAAMhB,KAAI,UAAKgB,GAASpB,EAAGsC,EAAMrC,EAAGe,EAAM4L,EAAQjN,MAAOgN,EAAU5M,OAAQ2M,EAAUpM,MAAM,SAASC,cAAc,WAC3JwM,IClBQ,MAAMC,UAAwBnO,YAC3CC,SAAS,MAAD,EAC8Bc,KAAKC,MAAlCmB,EADD,EACCA,IAAKsB,EADN,EACMA,KAAM2K,EADZ,EACYA,MAAOJ,EADnB,EACmBA,QAEnBK,EAD0B,GACbD,EAAMxI,OAGnB0I,EAAWF,EAAMvI,IAAI,CAACgH,EAAG/G,KAC7B,MAAMyI,EAAuBP,EAAQjJ,OAAQ8H,GAAIA,EAAEjD,QAAU9D,GAC7D,OAAQ,kBAAC,EAAD,CAAmBC,IAAKD,EAAG3D,IAAKA,EAAKsB,KAAMA,EANrB,GAM4BqC,EAAY+H,SANvD,GAM2EC,SAN5D,GAMgFvL,MAAOsK,EAAGjD,MAAO9D,EAAGiI,OAJrH,GAIqIC,QAASO,MAG7J,OAAQ,kBAAC,QAAD,KACN,kBAAC,OAAD,CAAMlN,KAAK,OAAOF,EAAGsC,EAAMrC,EAAGe,EARjB,GAQ6BjB,OAV3B,GAU6CJ,MAAOuN,EAAY/M,WAAY,IAC1FgN,EACD,kBAAC,EAAD,CACUzL,SAAU,EACVkD,IAAG,OACH1D,KAAI,OACJD,MAAOqB,EAAK,EACZtB,IAAKA,EAfF,GAeiB0L,IACpB3M,OAAQ2M,OCrBT,MAAMW,UAAyBxO,YAC5CC,SAAU,MAAD,EACgBc,KAAKC,MAArB0F,EADA,EACAA,MAAO5F,EADP,EACOA,MACP2N,EAA+B/H,EAA/B+H,KAAMhI,EAAyBC,EAAzBD,EAAGuH,EAAsBtH,EAAtBsH,QACVU,EADgChI,EAAbiI,UACO9I,IAAI,CAAC2B,EAAG1B,IAC9B,kBAAC,EAAD,CAAUC,IAAKyB,EAAEnF,KAAMF,IAAO,GAAF2D,EAAO,GAAI1D,MAAOtB,EAAM,GAAII,OAAQ,GAAImB,KAAMmF,EAAEnF,KAAME,MAAOiF,EAAEjF,SAErG,OAAQ,kBAAC,QAAD,KACLmM,EACD,kBAAC,EAAD,CAAiBvM,IAAK,EAAGsB,KAAM,GAAI2K,MAAOK,EAAMhI,EAAGA,EAAGuH,QAASA,MCdrE,MAAM3C,EAAe,CAACrC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAYC,KACrEkD,EAAO,IAAIA,GACXT,EAAU,IAAIA,GACdW,EAAY,IAAIA,GAChB3F,EAAO6C,KAAK,CACV4C,OACAhI,IACAuH,UACAW,YACArD,aACAC,cACAqD,gBAAiBC,EAAmBJ,EAAMhI,EAAGuH,MAI3Cc,EAAiB,CAACH,EAAWtM,EAAME,KACvCoM,EAAU9C,KAAK,CAACxJ,OAAME,WAGlBwM,EAAc,CAACJ,EAAWtM,EAAME,KACpCoM,EAAUxB,QAAQ,CAACN,EAAG/G,KAChB+G,EAAExK,OAASA,IACbsM,EAAU7I,GAAK,CACbzD,OACAE,aAKFyM,EAAc,CAAChB,EAAS3L,EAAMuH,KAClCoE,EAAQnC,KAAK,CAACxJ,OAAMuH,WAGhBqF,EAAW,CAACjB,EAAS3L,EAAMuH,KAC/BoE,EAAQb,QAAQ,CAACN,EAAG/G,KACd+G,EAAExK,OAASA,IACb2L,EAAQlI,GAAK,CACXzD,OACAuH,aAKFiF,EAAqB,CAACJ,EAAMhI,EAAGuH,IAChCvH,EAAI,EACE,CAACjD,KAAM,KAAME,SAAU,IACzBwL,EAAyBT,EAAM,EAAGhI,EAAGuH,GAGxCkB,EAA2B,CAACT,EAAM3I,EAAGW,EAAGuH,KAC5C,GAAGlI,EAAIW,EACL,OAAO,KACT,MAAM0I,EAAmBD,EAAyBT,EAAM,EAAI3I,EAAGW,EAAGuH,GAC5DoB,EAAoBF,EAAyBT,EAAM,EAAI3I,EAAI,EAAGW,EAAGuH,GACvE,IAAIxK,EAAO,CAAChC,IAAKiN,EAAK3I,GAAIrC,KAAM,KAAMrB,MAAO,MACzCsE,EAAQ,CAAClD,OAAME,SAAU,IAC7B,MACM2L,EADoBrB,EAAQjJ,OAAQ8H,GAAIA,EAAEjD,QAAU9D,GACbD,IAAKgH,IACzC,CAACxK,KAAMwK,EAAExK,KAAM2C,QAASxB,KAWjC,OATAkD,EAAMhD,SAAW2L,EACdF,IACD3L,EAAKC,KAAO0L,EAAiB3L,KAC7BkD,EAAMhD,SAAW,IAAIgD,EAAMhD,YAAayL,EAAiBzL,WAExD0L,IACD5L,EAAKpB,MAAQgN,EAAkB5L,KAC/BkD,EAAMhD,SAAW,IAAIgD,EAAMhD,YAAa0L,EAAkB1L,WAErDgD,GC3DM,MAAM4I,UAAqBtP,YACxC4B,YAAYZ,GACVa,MAAMb,GADW,KAUnBiG,aAAgBG,IAAY,IAAD,EACTrG,KAAKH,MAAhB6N,EADoB,EACpBA,KAAMhI,EADc,EACdA,EACX,GAAGA,GAAKgI,EAAK7I,OACX,OACF,IAAIoD,EAAS,GACb5B,EAAO+F,QAAS5K,IACdyG,EAASA,EAAOgC,OD6CA,EAACyD,EAAMhI,EAAGoG,KAC9B4B,EAAO,IAAIA,GACX,MAAMnD,EAAU,sPAchB,IAAItC,EAAS,GACTgF,EAAU,GACVW,EAAY,GAEhBG,EAAeH,EAAW,IAAKlI,GAC/BqI,EAAeH,EAAW,IAAK9B,GAC/BxB,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAE9DD,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D7E,IACAsI,EAAYJ,EAAW,IAAKlI,GAE5B4E,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAIT,EAAMpE,EACVuI,EAAYhB,EAAS,MAAOnD,GAE5B,IAAI0E,GAAU,EAId,IAHAP,EAAYhB,EAAS,SAAUuB,GAE/BlE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GACvDT,EAAM,GAAG,CAOd,GALAQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DiE,EAASlL,KAAKmL,MAAM3E,EAAM,GAC1BoE,EAASjB,EAAS,SAAUuB,GAE5BlE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC1DuB,GAAK4B,EAAKc,GAKZ,OAJAlE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DmD,EAAK5D,GAAOgC,EACZxB,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DD,EAAarC,EAAQyF,EAAMhI,EAAG,GAAI,GAAI6E,EAAY,GAC3CtC,EAGTqC,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DmD,EAAK5D,GAAO4D,EAAKc,GAEjBlE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DT,EAAM0E,EACNN,EAASjB,EAAS,MAAOnD,GACzBQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAShE,OAPAD,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAE9DD,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK,GAAK5B,EAEVxB,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DD,EAAarC,EAAQyF,EAAMhI,EAAG,GAAI,GAAI6E,EAAY,GAC3CtC,GC/GoByG,CAAOhB,EAAMhI,EAAGlE,IACvCkM,EAAOzF,EAAOA,EAAOpD,OAAS,GAAG6I,KACjChI,EAAIuC,EAAOA,EAAOpD,OAAS,GAAGa,IAEhC1F,KAAKmB,SAAS,CAACuM,OAAMhI,IAAGuC,SAAQwE,aAAc,QApB7B,KAuBnBE,aAAe,KAAO,IAAD,EACH3M,KAAKH,MAAhB6N,EADc,EACdA,KAAMhI,EADQ,EACRA,EACX,GAAGA,EAAI,EACL,OACF,IAAIuC,EAAS,GACbA,EDsGkB,EAACyF,EAAMhI,KAC3BgI,EAAO,IAAIA,GACX,MAAMnD,EAAU,4mBA+BhB,IAAItC,EAAS,GACTgF,EAAU,GACVW,EAAY,GAEhBG,EAAeH,EAAW,IAAKlI,GAC/B4E,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAE9DD,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAIuB,EAAI4B,EAAK,GACbK,EAAeH,EAAW,IAAK9B,GAE/BxB,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAIoE,EAAOjB,EAAKhI,GAShB,GARAqI,EAAeH,EAAW,OAAQe,GAElCrE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DmD,EAAKhI,GAAK,KACVA,IACAsI,EAAYJ,EAAW,IAAKlI,GAE5B4E,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GACpD,IAAN7E,EAGF,OAFA4E,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9DD,EAAarC,EAAQyF,EAAMhI,EAAG,GAAI,GAAI6E,EAAY,GAC3CtC,EAETqC,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAIT,EAAM,EACVmE,EAAYhB,EAAS,MAAOnD,GAE5BQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAI7H,EAAO,EACXuL,EAAYhB,EAAS,OAAQvK,GAE7B4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,GAC9D,IAAIlJ,EAAQ,EAKZ,IAJA4M,EAAYhB,EAAS,QAAS5L,GAE9BiJ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAEvDlJ,GAASqE,GAAG,CAEjB,GADA4E,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC1DoE,EAAOjB,EAAKhL,IAASiM,GAAQjB,EAAKrM,GAKpC,OAJAiJ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK5D,GAAO6E,EAEZrE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IACvDtC,EAGTqC,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC1DmD,EAAKrM,IAAUqM,EAAKhL,IACtB4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK5D,GAAO4D,EAAKhL,GAEjB4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DT,EAAMpH,EACNwL,EAASjB,EAAS,MAAOnD,KAEzBQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK5D,GAAO4D,EAAKrM,GAEjBiJ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DT,EAAMzI,EACN6M,EAASjB,EAAS,MAAOnD,IAG3BQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9D7H,EAAO,EAAIoH,EACXoE,EAASjB,EAAS,OAAQvK,GAE1B4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DlJ,EAAQqB,EAAO,EACfwL,EAASjB,EAAS,QAAS5L,GAC3BiJ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAgBhE,OAdAD,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC1D7H,IAASgD,GAAKiJ,EAAOjB,EAAKhL,KAC5B4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK5D,GAAO4D,EAAKhL,GAEjB4H,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DT,EAAMpH,EACNwL,EAASjB,EAAS,MAAOnD,IAE3BQ,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DmD,EAAK5D,GAAO6E,EAEZrE,EAAarC,EAAQyF,EAAMhI,EAAGuH,EAASW,EAAWrD,EAAY,IAC9DD,EAAarC,EAAQyF,EAAMhI,EAAG,GAAI,GAAI6E,EAAY,GAC3CtC,GCjOI2G,CAAOlB,EAAMhI,GACtBgI,EAAOzF,EAAOA,EAAOpD,OAAS,GAAG6I,KACjChI,EAAIuC,EAAOA,EAAOpD,OAAS,GAAGa,EAC9B1F,KAAKmB,SAAS,CAACuM,OAAMhI,IAAGuC,SAAQwE,aAAc,QA/B7B,KAkCnBC,gBAAmB/G,IACjB3F,KAAKmB,SAAS,CAACsL,aAAc9G,KAjC7B3F,KAAKH,MAAQ,CACX6N,KAAM,IAAImB,MAAM,KAChBnJ,EAAG,EACHuC,OAAQ,GACRwE,aAAc,MAgClBvN,SAAS,MAAD,EACyBc,KAAKH,MAA7BoI,EADD,EACCA,OAAQwE,EADT,EACSA,aACR1M,EAAyB,IAAlBI,EAA8B,IAE5C,OAAQ,6BACN,kBAAC,EAAD,CAAYiG,SAAUpG,KAAKkG,aAAc0G,SAAU5M,KAAK2M,eACvD3M,KAAKH,MAAM4M,cAAgB,kBAAC,EAAD,CAAgB1M,MAAOA,EAAOI,OAAQA,GAClC,kBAAC,EAAD,CAAkBwF,MAAO8G,EAAc1M,MAAOA,EAAOI,OAAQA,IAC7D,kBAAC,EAAD,CAAqBwF,MAAO8G,EAAaoB,gBAAiB9N,MAAOA,EAAOqB,IAAK,OAE5GqL,GAAgB,kBAAC,EAAD,CAAYlF,MAAO,CAACxH,MAAO,QAASI,OAAQ,QAASgJ,MAAO,QAAS3I,KAAMiM,EAAalC,WAAYmB,aAAce,EAAajC,cAC9IvC,EAAOpD,OAAS,GAAM,kBAAC,EAAD,CAAQ9E,MAAO,KAAMkI,OAAQA,EAAQG,YAAapI,KAAK0M,oBCnDrF,MAAMoC,WAAY7P,YAChBC,SACE,OAAQ,kBAAC,IAAD,KACN,yBAAK6M,UAAU,OACb,kBAAC,EAAD,MACA,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,kCAAkCC,UAAW,IAAO,yBAAKC,GAAG,aACjF,kBAACpI,EAAA,EAAD,KAAM,kBAACqI,GAAD,UAEV,kBAACL,EAAA,EAAD,CAAOE,KAAK,kDAAkDC,UAAW,IAAO,kBAACnI,EAAA,EAAD,KAAM,kBAAC,EAAD,SACtF,kBAACgI,EAAA,EAAD,CAAOE,KAAK,yCAAyCC,UAAW,IAAO,kBAACnI,EAAA,EAAD,KAAM,kBAAC,EAAD,SAC7E,kBAACgI,EAAA,EAAD,CAAOE,KAAK,kCAAkCC,UAAW,IAAO,kBAACnI,EAAA,EAAD,KAAM,kBAACsI,GAAD,aAOhF,MAAMD,GAAO,IAAO,yBAAKtD,UAAU,kBACjC,kBAACwD,EAAA,EAAD,CAAMxD,UAAU,YAAYrM,GAAG,mDAC7B,kDACA,yBAAK0P,GAAG,cAEV,kBAACG,EAAA,EAAD,CAAMxD,UAAU,YAAYrM,GAAG,YAC7B,wCACA,yBAAK0P,GAAG,oBAGNE,GAAW,IAAO,0CAETR,UC7Bf,MAAMU,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlJ,MACvB,2DAsCN,SAASmJ,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAKC,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBxQ,QACfkQ,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAMC,IACLH,QAAQG,MAAM,4CAA6CA,KCrEjErF,IAASrM,OAAO,kBAAC,GAAD,MAAS2R,SAASC,eAAe,SDUlC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,iCAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,KAC9B,MAAMpB,EAAK,UAAMkB,iCAAN,sBAEPxB,KAiDV,SAAiCM,GAE/BqB,MAAMrB,GACHI,KAAKkB,IAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,KAAKC,IACjCA,EAAauB,aAAaxB,KAAK,KAC7BR,OAAOC,SAASgC,aAKpB9B,GAAgBC,KAGnBa,MAAM,KACLF,QAAQC,IACN,mEArEAkB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,KAAK,KACjCO,QAAQC,IACN,+GAMJb,GAAgBC,MCrCxB+B,K","file":"static/js/main.b9d60895.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar, NavItem, Nav} from 'react-bootstrap';\nimport {IndexLinkContainer} from \"react-router-bootstrap\";\n\nexport default class NavigationBar extends Component {\n    render() {\n        return (<Navbar>\n            <Navbar.Header>\n                <Navbar.Brand>\n                    <a href=\"/data-structures-visualization/\">Data Structure Visualization</a>\n                </Navbar.Brand>\n                <Navbar.Toggle/>\n            </Navbar.Header>\n            <Navbar.Collapse>\n                <Nav>\n                    <IndexLinkContainer to=\"/data-structures-visualization/\">\n                        <NavItem>Home</NavItem>\n                    </IndexLinkContainer>\n                    <IndexLinkContainer to=\"/data-structures-visualization/BinarySearchTree\">\n                        <NavItem>BST</NavItem>\n                    </IndexLinkContainer>\n                    <IndexLinkContainer to=\"/data-structures-visualization/MinHeap\">\n                        <NavItem>MinHeap</NavItem>\n                    </IndexLinkContainer>\n                    {/* <IndexLinkContainer to=\"/About\">\n                        <NavItem>About</NavItem>\n                    </IndexLinkContainer> */}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>);\n    }\n}\n","import React, { Component } from 'react';\nimport { Text, Circle, Group } from 'react-konva';\n\nclass TreeNode extends Component\n{\n  state = {\n    color: 'green'\n  };\n\n  width=this.props.radius * 2;\n  height=this.props.radius * 2;\n\n  render(){\n    return (\n      <Group>\n        <Circle\n          x={this.props.x}\n          y={this.props.y}\n          width={this.width}\n          height={this.height}\n          fill={this.state.color}\n          shadowBlur={5}\n        />\n        <Text\n          x={this.props.x-this.width/2}\n          y={this.props.y-this.height/2}\n          text={`${this.props.val}`}\n          align='center'\n          verticalAlign='middle'\n          width={this.width}\n          height={this.height}\n        />\n      </Group>\n    );\n  }\n}\n\nexport default TreeNode;\n","import React, {Component} from 'react';\nimport {Rect, Text, Group} from 'react-konva';\n\nexport default class Variable extends Component{\n  constructor(props){\n    super(props);\n    this.state =  {\n      textWidthCalculated: false\n    };\n  }\n  componentDidMount() {\n    if(this.state.textWidthCalculated)\n      return;\n    const width = this.textNode.getTextWidth();\n    this.setState({textWidthCalculated: true, width: width});\n  }\n  render() {\n    const {top, right, height, name, isNull, value} = this.props;\n    let text;\n    if(isNull)\n      text = `${name}: null`;\n    else if(value !== undefined)\n      text = `${name} = ${value}`;\n    else\n      text = `${name}`;\n    if(!this.state.textWidthCalculated)\n      return (<Text ref={node => {this.textNode = node;}} height={height} text={text} />);\n    const width = this.state.width;\n    const horisontalPadding = 3;\n    return (\n      <Group>\n        <Rect x={right - width - 2 * horisontalPadding} y={top} width={width + 2 * horisontalPadding} height={height} fill=\"yellow\" cornerRadius={5} shadowBlur={5} />\n        <Text\n          ref={node => {\n            this.textNode = node;\n          }}\n           x={right - width - horisontalPadding} y={top} width={width} height={height}\n           align=\"center\"\n           verticalAlign=\"middle\"\n          text={text}\n        />\n      </Group>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Arrow, Group} from 'react-konva';\nimport Variable from './Variable';\n\nexport default class Pointer extends Component {\n  render() {\n    const {\n      right,\n      height,\n      top,\n      name,\n      rotation = 0\n    } = this.props;\n    let middle = top + height / 2;\n    let arrowWidth = 20;\n    let arrowPoints = [\n      right - arrowWidth,\n      middle,\n      right,\n      middle\n    ];\n    return (<Group offsetX={-right} offsetY={-middle}>\n      <Group rotation={rotation} offsetX={right} offsetY={middle}>\n        <Arrow points={arrowPoints} stroke='red' fill='red' x={0} y={0} pointerLength={7} pointerWidth={7} shadowBlur={5}/>\n        <Variable height={height} right={right - arrowWidth} top={top} name={name}/>\n      </Group>\n    </Group>);\n  }\n};\n","import React, {Component} from 'react';\nimport TreeNode from './TreeNode';\nimport {Group, Arrow} from 'react-konva'\nimport Pointer from './../Variables/Pointer';\n\nexport default class BinaryTree extends Component {\n\n  getLeftSubTree(x, y, width) {\n    if (this.props.root.left !== null)\n      return (<BinaryTree pointers={this.props.pointers} root={this.props.root.left} x={x} y={y} width={width}/>);\n    return null;\n  }\n\n  getRightSubTree(x, y, width) {\n    if (this.props.root.right !== null)\n      return (<BinaryTree pointers={this.props.pointers} root={this.props.root.right} x={x} y={y} width={width}/>);\n    return null;\n  }\n\n  getArrowFromRootToChild(rootX, rootY, childX, childY, treeNodeRadius) {\n    let points = this.getArrowPoints(rootX, rootY, childX, childY, treeNodeRadius);\n    return this.getArrow(points);\n  }\n\n  getArrowPoints(rootX, rootY, childX, childY, treeNodeRadius) {\n    let alfa = Math.atan(Math.abs((rootX - childX) / (rootY - childY)));\n    let d1 = treeNodeRadius * Math.sin(alfa);\n    let d2 = treeNodeRadius * Math.cos(alfa);\n    let y1 = rootY + d2;\n    let y2 = childY - d2;\n    if (rootX > childX) {\n      d1 = -d1;\n      d2 = -d2;\n    }\n    let x1 = rootX + d1;\n    let x2 = childX - d1;\n    return [x1, y1, x2, y2];\n  }\n\n  getArrow(points) {\n    return (<Arrow points={points} stroke='black' fill='black'/>)\n  }\n\n  getPointersToRoot(pointers = []) {\n    let filtered = pointers.filter(pointer => pointer.pointer === this.props.root);\n    return filtered;\n  }\n\n  render() {\n    let treeNodeRadius = 15;\n    let levelDifferenceY = 45;\n\n    const {x, y, root, width, pointers} = this.props;\n\n    if (root === null)\n      return null;\n\n    let rootX = x;\n    let rootY = y + treeNodeRadius;\n    let rootVal = root.val;\n\n    let leftChildX = x - width / 4;\n    let rightChildX = x + width / 4;\n    let childWidth = width / 2;\n    let childY = y + levelDifferenceY;\n    let childRootY = rootY + levelDifferenceY;\n\n    let leftSubTree = this.getLeftSubTree(leftChildX, childY, childWidth);\n    let rightSubTree = this.getRightSubTree(rightChildX, childY, childWidth);\n    let arrowToLeftSubTree = null;\n    let arrowToRightSubTree = null;\n\n    if (leftSubTree !== null)\n      arrowToLeftSubTree = this.getArrowFromRootToChild(rootX, rootY, leftChildX, childRootY, treeNodeRadius);\n\n    if (rightSubTree !== null)\n      arrowToRightSubTree = this.getArrowFromRootToChild(rootX, rootY, rightChildX, childRootY, treeNodeRadius);\n\n    let pointersToRoot = this.getPointersToRoot(pointers);\n    let pointersToRootLength = pointersToRoot.length;\n    let rotationAngle = -20;\n    pointersToRoot = pointersToRoot.map((pointer, i) => {\n      return (<Pointer\n                rotation={(pointersToRootLength - 1 - 2 * i) * rotationAngle}\n                key={pointer.name}\n                name={pointer.name}\n                right={rootX - treeNodeRadius}\n                top={rootY - treeNodeRadius / 2}\n                height={treeNodeRadius}/>)\n      });\n\n    return (<Group>\n      <TreeNode val={rootVal} x={rootX} y={rootY} radius={treeNodeRadius}/>\n      {arrowToRightSubTree}\n      {arrowToLeftSubTree}\n      {leftSubTree}\n      {rightSubTree}\n      {pointersToRoot}\n    </Group>);\n  }\n}\n","import React, {Component} from 'react';\nimport BinarySearchTree from './BinaryTree';\nimport TreeNode from './TreeNode';\nimport Pointer from './../Variables/Pointer';\nimport {Group, Rect, Text, Arrow} from 'react-konva';\nimport Variable from './../Variables/Variable';\n\nexport default class BinaryTreeContainer extends Component {\n\n  getNullPointers(pointers = []) {\n    return pointers.filter(pointer => !pointer.pointer);\n  }\n\n  getRootPointer(isNull) {\n    const {width} = this.props;\n    const {w, h} = {\n      w: 50,\n      h: 20\n    };\n    const offsetFromTop = 10;\n    const x = width / 2 - w / 2;\n    const y = offsetFromTop;\n    if (isNull)\n      return (<Group>\n        <Rect x={x} y={y} width={w} height={h} fill='blue' shadowBlur={5}/>\n        <Text x={x} y={y} fill=\"white\" text=\"root\" align='center' verticalAlign='middle' width={w} height={h}/>\n      </Group>);\n    return (<Group>\n      <Rect x={x} y={y} width={w} height={h} fill='blue' shadowBlur={5}/>\n      <Text x={x} y={y} fill=\"white\" text=\"root\" align='center' verticalAlign='middle' width={w} height={h}/>\n      <Arrow points={[\n          width / 2,\n          y + h,\n          width / 2,\n          50\n        ]} stroke='black' fill='black'/>\n    </Group>);\n  }\n\n  getPointersToHangingNodes(hangingNodes, pointers) {\n    return pointers.filter(p => hangingNodes.some(n => p.pointer === n));\n  }\n\n  render() {\n    const {root, pointers = [], hangingNodes = []} = this.props.frame;\n    const {width, top = 0} = this.props;\n    const rootPointer = this.getRootPointer(root === null);\n    let nullPointers = this.getNullPointers(pointers);\n    nullPointers = nullPointers.map((pointer, i) => {\n      return (<Variable key={pointer.name} name={pointer.name} isNull={true} right={width - 10} top={i * 25 + 5} height={20}/>);\n    });\n    let hangingNodesWithPointers = hangingNodes.map((node, i) => {\n      let pointerToNode = pointers.find(p => p.pointer === node);\n      let treeNodeRadius = 15;\n      let x = width - 200;\n      let y = i * 35 + 20;\n      return (<Group key={node}>\n        <TreeNode val={node.val} x={x} y={y} radius={15}/>\n        <Pointer rotation={0} key={pointerToNode.name} name={pointerToNode.name} right={x - treeNodeRadius} top={y - treeNodeRadius / 2} height={treeNodeRadius}/>\n      </Group>);\n    });\n\n    //debugger;\n    return (<Group y={top}>\n      <BinarySearchTree pointers={pointers} root={root} width={width-200} x={width / 2} y={50}/>\n      {rootPointer}\n      {nullPointers}\n      {hangingNodesWithPointers}\n    </Group>);\n  }\n}\n","import React, {Component} from 'react';\nimport {\n  Button,\n  FormControl,\n  FormGroup,\n  Row,\n  Grid,\n  Col\n} from 'react-bootstrap';\n\nexport default class Operations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      insertValue: \"\",\n      isInsertValueInvalid: false\n    };\n  }\n\n  handleInsert = () => {\n    debugger;\n    this.setState({isInsertValueInvalid: false});\n    const {onInsert} = this.props;\n    const values = this.state.insertValue.split(',');\n    const regex = /^-?\\d*$/;\n    if (values.some(v=>!v.match(regex))){\n      this.setState({isInsertValueInvalid: true});\n      return;\n    }\n    this.setState({insertValue: \"\"})\n    onInsert(values.map(v=>parseInt(v)));\n  }\n\n  handleInsertChange = (sender) => {\n    const text = sender.target.value;//.replace(/\\s/g, '');\n    this.setState({insertValue: text})\n  }\n\n  render() {\n    return (<div>\n      <FormGroup>\n        <Grid>\n          <Row>\n            <Col xs={3} sm={2} md={2}>\n              <FormControl style={this.state.isInsertValueInvalid ? {borderColor: 'red'} : {}} value={this.state.insertValue} placeholder=\"Example: 10,15,-4\" onChange={this.handleInsertChange}/>\n            </Col>\n            <Col xs={1} sm={1} md={1}>\n              <Button onClick={this.handleInsert}>Insert</Button>\n            </Col>\n          </Row>\n        </Grid>\n      </FormGroup>\n    </div>);\n  }\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap';\nimport Slider from '@material-ui/lab/Slider';\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n\n    const {frames} = this.props;\n\n    this.state = {\n      isPlaying: true,\n      frames: frames,\n      currentFrameIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    var intervalId = setInterval(this.timer, 1000);\n    this.setState({intervalId: intervalId});\n    this.props.onNextFrame(this.state.frames[this.state.currentFrameIndex]);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.frames === this.props.frames)\n      return;\n    clearInterval(this.state.intervalId);\n    const {frames} = nextProps;\n    this.setState({isPlaying: true, frames: frames, currentFrameIndex: 0});\n    var intervalId = setInterval(this.timer, 1000);\n    this.setState({intervalId: intervalId});\n    if (frames.length > 0)\n      this.props.onNextFrame(frames[0]);\n  }\n\n  timer = () => {\n    const newFrameIndex = this.state.currentFrameIndex + 1;\n    if (newFrameIndex < this.state.frames.length) {\n      this.handleFrameIndexChange(newFrameIndex);\n    } else {\n      this.handlePause();\n    }\n  }\n\n  handleFrameIndexChange = (value) => {\n    this.setState({currentFrameIndex: value});\n    this.props.onNextFrame(this.state.frames[value]);\n  }\n\n  handleSliderChange = (event, value) => {\n    this.handleFrameIndexChange(value);\n  }\n\n  handlePause = () => {\n    clearInterval(this.state.intervalId);\n    this.setState({isPlaying: false});\n  }\n\n  handlePlay = () => {\n    var intervalId = setInterval(this.timer, 1000);\n    this.setState({intervalId: intervalId, isPlaying: true});\n  }\n\n  handleNext = () => {\n    const index = this.state.currentFrameIndex;\n    this.handleFrameIndexChange(index + 1);\n  }\n\n  handlePrev = () => {\n    const index = this.state.currentFrameIndex;\n    this.handleFrameIndexChange(index - 1);\n  }\n\n  render() {\n    const {currentFrameIndex, isPlaying} = this.state;\n    const {length: framesLength} = this.state.frames;\n\n    return (<div style={{\n        width: `${this.props.width}px`,\n        float: 'left'\n      }}>\n      <div style={{\n          width: '180px'\n        }}>\n        {\n          !isPlaying && <Button style={{\n                float: \"left\"\n              }} onClick={this.handlePlay}>Play</Button>\n        }\n        {\n          isPlaying && <Button style={{\n                float: \"left\"\n              }} onClick={this.handlePause}>Pause</Button>\n        }\n        <Button style={{\n            float: \"left\"\n          }} disabled={isPlaying || currentFrameIndex === 0} onClick={this.handlePrev}>Prev</Button>\n        <Button style={{\n            float: \"left\"\n          }} disabled={isPlaying || currentFrameIndex === (framesLength - 1)} onClick={this.handleNext}>Next</Button>\n      </div>\n      <div style={{\n          width: '100%',\n          paddingLeft: '185px',\n          paddingRight: '5px'\n        }}>\n        <Slider style={{\n            padding: '17px 0px'\n          }} value={currentFrameIndex} min={0} max={framesLength - 1} step={1} onChange={this.handleSliderChange}/>\n      </div>\n    </div>);\n  }\n}\n","const getPointersToTreeClone = (root, cloneRoot, pointers) => {\n  if (!root)\n    return [];\n  let rootPointers = pointers.filter((val) => val.pointer === root);\n  let newRootPointers = rootPointers.map((ptr) => ({name: ptr.name, pointer: cloneRoot}));\n  let leftPointers = getPointersToTreeClone(root.left, cloneRoot.left, pointers);\n  let rightPointers = getPointersToTreeClone(root.right, cloneRoot.right, pointers);\n  return leftPointers.concat(newRootPointers).concat(rightPointers);\n};\n\nconst getPointersToHangingNodesClone = (hangingNodes, hangingNodesClone, pointers) => {\n  let result = [];\n  for(let i=0; i < hangingNodes.length; i++){\n    let filteredP = pointers.filter(p=>p.pointer === hangingNodes[i]);\n    result = result.concat(filteredP.map(p=>({name: p.name, pointer: hangingNodesClone[i]})));\n  }\n  return result;\n}\n\nconst pushToFrames = (frames, root, hangingNodes, pointers, pseudocode, currentLine) => {\n  let newRoot = JSON.parse(JSON.stringify(root));\n  let newHangingNodes = JSON.parse(JSON.stringify(hangingNodes));\n  frames.push({\n    root: newRoot,\n    hangingNodes: newHangingNodes,\n    pointers: getPointersToTreeClone(root, newRoot, pointers).concat(pointers.filter(p=>!p.pointer)).concat(getPointersToHangingNodesClone(hangingNodes, newHangingNodes, pointers)),\n    pseudocode,\n    currentLine\n  });\n};\n\nconst setPointerValue = (pointers, name, newVal) => {\n  for (let i = 0; i < pointers.length; i++) {\n    if (pointers[i].name === name) {\n      pointers[i] = {\n        name: name,\n        pointer: newVal\n      };\n    }\n  }\n};\n\nconst createPointer = (pointers, name, initVal) => {\n  pointers.push({name, pointer: initVal});\n}\n/*\nexport const Insert = (root, val) => {\n\n  let frames = [];\n\n  //let frameRoot = root;\n  let pointers = [];\n\n  pushToFrames(frames, root, pointers);\n\n  if (!root) {\n    root = {\n      val,\n      left: null,\n      right: null\n    };\n    //\n    frames.push({root, pointers: []});\n    //\n    return frames;\n  }\n\n  var currentNode = root;\n  //\n  pointers.push({name: 'currentNode', pointer: root});\n  pushToFrames(frames, root, pointers);\n  //\n\n  var newNode = {\n    val,\n    left: null,\n    right: null\n  };\n\n  while (currentNode) {\n    if (val < currentNode.val) {\n      if (!currentNode.left) {\n        currentNode.left = newNode;\n        pushToFrames(frames, root, pointers);\n\n        break;\n      } else {\n        currentNode = currentNode.left;\n        //\n        pointers = pointers.map((val) => {\n          if (val.name === 'currentNode')\n            return {name: 'currentNode', pointer: currentNode};\n          return val;\n        });\n        pushToFrames(frames, root, pointers);\n        //\n      }\n    } else {\n      if (!currentNode.right) {\n        currentNode.right = newNode;\n        pushToFrames(frames, root, pointers);\n        break;\n      } else {\n        currentNode = currentNode.right;\n        //\n        pointers = pointers.map((val) => {\n          if (val.name === 'currentNode')\n            return {name: 'currentNode', pointer: currentNode};\n          return val;\n        });\n        pushToFrames(frames, root, pointers);\n        //\n      }\n    }\n  }\n  return frames;\n}*/\n\nexport const Insert2 = (root, val) => {\n  root = JSON.parse(JSON.stringify(root));\n  const pseudocode = `Tree-Insert(T, newNode)\n  parentNode <- null\n  currentNode <- root(T)\n  while (currentNode != null)\n    parentNode <- currentNode\n    if (key(newNode) < key(currentNode))\n      then currentNode <- left(currentNode)\n      else currentNode <- right(currentNode)\n  if (parentNode = null)\n    then root(T) <- newNode\n    else if (key(newNode) < key(parentNode))\n      then left(parentNode) <- newNode\n      else right(parentNode) <- newNode\n  end`;\n\n  let newNode = {\n    val,\n    left: null,\n    right: null\n  };\n\n  let frames = [];\n  let pointers = [{name: 'newNode', pointer: newNode}];\n  let hangingNodes = [newNode];\n  pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 2);\n\n  var parentNode = null;\n  createPointer(pointers, 'parentNode', parentNode);\n  pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 3);\n\n  var currentNode = root;\n  createPointer(pointers, 'currentNode', currentNode);\n  pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 4);\n\n  while (currentNode) {\n    pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 5);\n    parentNode = currentNode;\n    setPointerValue(pointers, 'parentNode', parentNode);\n\n    pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 6);\n    if (val < currentNode.val) {\n      pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 7);\n      currentNode = currentNode.left;\n      setPointerValue(pointers, 'currentNode', currentNode);\n    } else {\n      pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 8);\n      currentNode = currentNode.right;\n      setPointerValue(pointers, 'currentNode', currentNode);\n    }\n    pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 4);\n  }\n\n  pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 9);\n  if (!parentNode) {\n    pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 10);\n    root = newNode;\n  } else {\n    pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 11);\n    if (val < parentNode.val) {\n      pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 12);\n      parentNode.left = newNode;\n    } else {\n      pushToFrames(frames, root, hangingNodes, pointers, pseudocode, 13);\n      parentNode.right = newNode;\n    }\n  }\n  pushToFrames(frames, root, [], pointers, pseudocode, 14);\n  pushToFrames(frames, root, [], [], pseudocode, 0);\n  return frames;\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './Pseudocode.css';\n\nexport class Pseudocode extends Component {\n\n  componentDidMount() {\n      this.componentDidUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.selected) {\n      const myDomNode = ReactDOM.findDOMNode(this.selected);\n        myDomNode.scrollIntoView(false);\n    }\n  }\n\n  render() {\n    const {text, selectedLine, style} = this.props;\n    const lines = text.match(/[^\\r\\n]+/g);\n    if (!lines)\n      return null;\n    const rows = lines.map((line, i) => {\n      if (i === (selectedLine - 1))\n        return (<div key={i} ref={e => this.selected = e} className='pseudocode-row selected'>\n          <div className='line-number'>{`${i + 1}`}</div>\n          <div className='text-container'>\n            <pre className='text'>{line}</pre>\n          </div>\n        </div>);\n      return (<div key={i} className='pseudocode-row'>\n        <div className='line-number'>{`${i + 1}`}</div>\n        <div className='text-container'>\n          <pre className='text'>{line}</pre>\n        </div>\n      </div>);\n    });\n    return (<div className='pseudocode' style={style}>\n      <div className='pseudocode-title'>\n        <h3>Pseudocode</h3>\n      </div>\n      <div className='pseudocode-rows'>\n        {rows}\n      </div>\n    </div>);\n  }\n}\n","import React, {Component} from 'react';\nimport {Stage, Layer, Rect} from 'react-konva';\n\nclass KonvaContainer extends Component {\n  render() {\n    return (<Stage style={{float: 'left'}} width={this.props.width} height={this.props.height}>\n      <Layer>\n        <Rect stroke='green' strokeWidth={2} width={this.props.width} height={this.props.height}/>{this.props.children}\n      </Layer>\n    </Stage>)\n  }\n}\n\nexport default KonvaContainer;\n","import React, {Component} from 'react';\nimport BinaryTreeContainer from './../BinaryTree/BinaryTreeContainer';\nimport Operations from './Operations';\nimport Player from './../Player/Player';\nimport {Insert2} from './Algorithms';\nimport {Pseudocode} from './../Pseudocode/Pseudocode';\nimport KonvaContainer from './../KonvaContainer/KonvaContainer';\n\nexport default class BSTIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      root: null,\n      frames: [],\n      currentFrame: null\n    };\n\n  }\n\n  handleInsert = (values) => {\n    debugger;\n    let frames = [];\n    let root = this.state.root;\n    values.forEach((value)=>{\n      frames = frames.concat(Insert2(root, value));\n      root = frames[frames.length - 1].root;\n    });\n    this.setState({root, frames, currentFrame: null});\n  }\n\n  handleNextFrame = (frame) => {\n    this.setState({currentFrame: frame});\n  }\n\n  render() {\n    const {frames, currentFrame} = this.state;\n\n    const width = 700;\n    const height = 400;\n\n    return (<div>\n      <Operations onInsert={this.handleInsert}/>\n      {this.state.currentFrame && <KonvaContainer width={width} height={height}><BinaryTreeContainer frame={currentFrame} width={width} height={height}/></KonvaContainer>}\n      {currentFrame && <Pseudocode style={{width: '430px', height: '400px', float: 'left'}} text={currentFrame.pseudocode} selectedLine={currentFrame.currentLine} />}\n      {(frames.length > 0) && <Player width={1100} frames={frames} onNextFrame={this.handleNextFrame}/>}\n    </div>);\n  }\n}\n","import React, {Component} from 'react';\nimport {\n  Button,\n  FormControl,\n  FormGroup,\n  Row,\n  Grid,\n  Col\n} from 'react-bootstrap';\n\nexport default class Operations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      insertValue: \"\",\n      isInsertValueInvalid: false\n    };\n  }\n\n  handleInsert = () => {\n    this.setState({isInsertValueInvalid: false});\n    const {onInsert} = this.props;\n    const values = this.state.insertValue.split(',');\n    const regex = /^-?\\d*$/;\n    if (values.some(v=>!v.match(regex))){\n      this.setState({isInsertValueInvalid: true});\n      return;\n    }\n    this.setState({insertValue: \"\"})\n    onInsert(values.map(v=>parseInt(v)));\n  }\n\n  handleInsertChange = (sender) => {\n    const text = sender.target.value;//.replace(/\\s/g, '');\n    this.setState({insertValue: text})\n  }\n\n  handleDelete = () =>{\n    this.props.onDelete();\n  }\n\n  render() {\n    return (<div>\n      <FormGroup>\n        <Grid>\n          <Row>\n            <Col xs={3} sm={2} md={2}>\n              <FormControl style={this.state.isInsertValueInvalid ? {borderColor: 'red'} : {}} value={this.state.insertValue} placeholder=\"Example: 10,15,-4\" onChange={this.handleInsertChange}/>\n            </Col>\n            <Col xs={1} sm={1} md={1}>\n              <Button onClick={this.handleInsert}>Insert</Button>\n            </Col>\n            <Col xs={1} sm={1} md={1}>\n              <Button onClick={this.handleDelete}>Delete root</Button>\n            </Col>\n          </Row>\n        </Grid>\n      </FormGroup>\n    </div>);\n  }\n}\n","import React, {Component} from 'react';\nimport {Rect, Text, Group} from 'react-konva';\nimport Pointer from './../Variables/Pointer';\n\nexport default class HorizontalElement extends Component{\n  render(){\n    const {value, index, top, left, elementH, elementW, indexH, indexes} = this.props;\n    const indexesLength = indexes.length;\n    const rotationAngle = -20;\n    const indexesView = indexes.map((e, i)=>{\n      return (<Pointer\n                rotation={(indexesLength - 1 - 2 * i) * rotationAngle - 90}\n                key={e.name}\n                name={e.name}\n                right={left + elementW/2}\n                top={top + indexH + elementH}\n                height={elementH/2}/>);\n    });\n\n    return (<Group>\n      <Text text={`${index}`} x={left} y={top} width={elementW} height={indexH}  align='center' verticalAlign='middle'/>\n      <Rect fill={value !== undefined && value !== null ? 'green' : 'yellow'} x={left} y={top + indexH} width={elementW} height={elementH} stroke='dark' strokeWidth={1}/>\n      {value !== undefined && value !== null && <Text text={`${value}`} x={left} y={top + indexH} width={elementW} height={elementH} align='center' verticalAlign='middle'/>}\n      {indexesView}\n    </Group>);\n  }\n}\n","import React, {Component} from 'react';\nimport Pointer from './../Variables/Pointer';\nimport HorizontalElement from './HorizontalElement';\nimport {Group, Rect} from 'react-konva';\n\nexport default class HorizontalArray extends Component{\n  render(){\n    const {top, left, array, indexes} = this.props;\n    const elementH = 30, elementW = 30;\n    const arrayWidth = array.length * elementW;\n    const indexH = 20;\n\n    const elements = array.map((e, i)=>{\n      const indexesToThisElement = indexes.filter((e)=>e.index === i);\n      return (<HorizontalElement key={i} top={top} left={left + i*elementW} elementH={elementH} elementW={elementW} value={e} index={i} indexH={indexH} indexes={indexesToThisElement} />);\n    });\n\n    return (<Group>\n      <Rect fill='dark' x={left} y={top+indexH} height={elementH} width={arrayWidth} shadowBlur={7} />\n      {elements}\n      <Pointer\n                rotation={0}\n                key={`heap`}\n                name={`heap`}\n                right={left-3}\n                top={top + indexH + elementH/4}\n                height={elementH/2} />\n    </Group>);\n  }\n}\n","import React, {Component} from 'react';\nimport {Group} from 'react-konva';\nimport HorizontalArray from './../Array/HorizontalArray';\nimport Variable from './../Variables/Variable';\n\nexport default class MinHeapContainer extends Component {\n  render() {\n    const {frame, width} = this.props;\n    const {heap, n, indexes, variables} = frame;\n    const variablesView = variables.map((v, i) => {\n      return (<Variable key={v.name} top={i*30 + 10} right={width-20} height={20} name={v.name} value={v.value} />);\n    });\n    return (<Group>\n      {variablesView}\n      <HorizontalArray top={5} left={70} array={heap} n={n} indexes={indexes}/>\n    </Group>);\n  }\n}\n","const pushToFrames = (frames, heap, n, indexes, variables, pseudocode, currentLine) => {\n  heap = [...heap];\n  indexes = [...indexes];\n  variables = [...variables];\n  frames.push({\n    heap,\n    n,\n    indexes,\n    variables,\n    pseudocode,\n    currentLine,\n    binaryTreeFrame: getBinaryTreeFrame(heap, n, indexes)\n  });\n}\n\nconst createVariable = (variables, name, value) => {\n  variables.push({name, value});\n}\n\nconst setVariable = (variables, name, value) => {\n  variables.forEach((e, i) => {\n    if (e.name === name)\n      variables[i] = {\n        name,\n        value\n      };\n  });\n}\n\nconst createIndex = (indexes, name, index) => {\n  indexes.push({name, index});\n}\n\nconst setIndex = (indexes, name, index) => {\n  indexes.forEach((e, i) => {\n    if (e.name === name)\n      indexes[i] = {\n        name,\n        index\n      };\n  });\n}\n\nconst getBinaryTreeFrame = (heap, n, indexes) => {\n  if(n < 1)\n    return {root: null, pointers: []};\n  return getBinaryTreeFrameHelper(heap, 1, n, indexes);\n}\n\nconst getBinaryTreeFrameHelper = (heap, i, n, indexes) => {\n  if(i > n)\n    return null;\n  const leftSubtreeFrame = getBinaryTreeFrameHelper(heap, 2 * i, n, indexes);\n  const rightSubtreeFrame = getBinaryTreeFrameHelper(heap, 2 * i + 1, n, indexes);\n  let root = {val: heap[i], left: null, right: null};\n  let frame = {root, pointers: []};\n  const indexesToThisNode = indexes.filter((e)=>e.index === i);\n  const pointersToThisNode = indexesToThisNode.map((e)=>{\n    return {name: e.name, pointer: root};\n  });\n  frame.pointers = pointersToThisNode;\n  if(leftSubtreeFrame){\n    root.left = leftSubtreeFrame.root;\n    frame.pointers = [...frame.pointers, ...leftSubtreeFrame.pointers];\n  }\n  if(rightSubtreeFrame){\n    root.right = rightSubtreeFrame.root;\n    frame.pointers = [...frame.pointers, ...rightSubtreeFrame.pointers];\n  }\n  return frame;\n}\n\nexport const Insert = (heap, n, e) => {\n  heap = [...heap];\n  const pseudocode = `InsertHeap(heap,n,e)\n  n <- n + 1\n  ptr <- n\n  while (ptr > 1)\n    parent <- ptr / 2\n    if (e >= heap[parent]) then\n      heap[ptr] <- e\n      return\n    heap[ptr] <- heap[parent]\n    ptr <- parent\n  end while\n  heap[1] <- e\n  end`;\n\n  let frames = [];\n  let indexes = [];\n  let variables = [];\n\n  createVariable(variables, 'n', n);\n  createVariable(variables, 'e', e);\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 1);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 2);\n  n++;\n  setVariable(variables, 'n', n);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 3);\n  let ptr = n;\n  createIndex(indexes, 'ptr', ptr);\n\n  let parent = -1;\n  createIndex(indexes, 'parent', parent);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 4);\n  while (ptr > 1) {\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 5);\n    parent = Math.floor(ptr / 2);\n    setIndex(indexes, 'parent', parent);\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 6);\n    if (e >= heap[parent]) {\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 7);\n      heap[ptr] = e;\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 8);\n      pushToFrames(frames, heap, n, [], [], pseudocode, 0);\n      return frames;\n    }\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 9);\n    heap[ptr] = heap[parent];\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 10);\n    ptr = parent;\n    setIndex(indexes, 'ptr', ptr);\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 4);\n  }\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 11);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 12);\n  heap[1] = e;\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 13);\n  pushToFrames(frames, heap, n, [], [], pseudocode, 0);\n  return frames;\n}\n\nexport const Delete = (heap, n) => {\n  heap = [...heap];\n  const pseudocode = `DeleteHeap(heap,n,e)\n  e <- heap[1]\n  last <- heap[n]\n  n <- n - 1\n  if (n = 0) then\n    return\n  ptr <- 1\n  left <- 2\n  right <- 3\n  while (right <= n)\n    if(last < heap[left] and last <= heap[right])\n      then\n        heap[ptr] <- last\n        return\n    if(heap[right] >= heap[left])\n      then\n        heap[ptr] <- heap[left]\n        ptr <- left\n      else\n        heap[ptr] <- heap[right]\n        ptr <- right\n    left <- 2*ptr\n    right <- left + 1\n  end while\n  if(left = n and last > heap[left])\n    then\n      heap[ptr] <- heap[left]\n      ptr <- left\n  heap[ptr] <- last\n  end`;\n\n  let frames = [];\n  let indexes = [];\n  let variables = [];\n\n  createVariable(variables, 'n', n);\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 1);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 2);\n  let e = heap[1];\n  createVariable(variables, 'e', e);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 3);\n  let last = heap[n];\n  createVariable(variables, 'last', last);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 4);\n  heap[n] = null;\n  n--;\n  setVariable(variables, 'n', n);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 5);\n  if (n === 0) {\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 6);\n    pushToFrames(frames, heap, n, [], [], pseudocode, 0);\n    return frames;\n  }\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 7);\n  let ptr = 1;\n  createIndex(indexes, 'ptr', ptr);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 8);\n  let left = 2;\n  createIndex(indexes, 'left', left);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 9);\n  let right = 3;\n  createIndex(indexes, 'right', right);\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 10);\n  debugger;\n  while (right <= n) {\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 11);\n    if (last < heap[left] && last <= heap[right]) {\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 13);\n      heap[ptr] = last;\n\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 14);\n      return frames;\n    }\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 15);\n    if (heap[right] >= heap[left]) {\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 17);\n      heap[ptr] = heap[left];\n\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 18);\n      ptr = left;\n      setIndex(indexes, 'ptr', ptr);\n    } else {\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 20);\n      heap[ptr] = heap[right];\n\n      pushToFrames(frames, heap, n, indexes, variables, pseudocode, 21);\n      ptr = right;\n      setIndex(indexes, 'ptr', ptr);\n    }\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 22);\n    left = 2 * ptr;\n    setIndex(indexes, 'left', left);\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 23);\n    right = left + 1;\n    setIndex(indexes, 'right', right);\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 10);\n  }\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 25);\n  if (left === n && last > heap[left]) {\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 27);\n    heap[ptr] = heap[left];\n\n    pushToFrames(frames, heap, n, indexes, variables, pseudocode, 28);\n    ptr = left;\n    setIndex(indexes, 'ptr', ptr);\n  }\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 29);\n  heap[ptr] = last;\n\n  pushToFrames(frames, heap, n, indexes, variables, pseudocode, 30);\n  pushToFrames(frames, heap, n, [], [], pseudocode, 0);\n  return frames;\n}\n","import React, {Component} from 'react';\nimport Operations from './Operations';\nimport MinHeapContainer from './MinHeapContainer';\nimport {Pseudocode} from './../Pseudocode/Pseudocode';\nimport Player from './../Player/Player';\nimport {Insert, Delete} from './Algorithms';\nimport KonvaContainer from './../KonvaContainer/KonvaContainer';\nimport BinaryTreeContainer from './../BinaryTree/BinaryTreeContainer';\n\n\nexport default class MinHeapIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heap: [...Array(16)],\n      n: 0,\n      frames: [],\n      currentFrame: null\n    };\n  }\n\n  handleInsert = (values) => {\n    let {heap, n} = this.state;\n    if(n >= heap.length)\n      return;\n    let frames = [];\n    values.forEach((value)=>{\n      frames = frames.concat(Insert(heap, n, value));\n      heap = frames[frames.length - 1].heap;\n      n = frames[frames.length - 1].n;\n    });\n    this.setState({heap, n, frames, currentFrame: null});\n  }\n\n  handleDelete = () => {\n    let {heap, n} = this.state;\n    if(n < 1)\n      return;\n    let frames = [];\n    frames = Delete(heap, n);\n    heap = frames[frames.length - 1].heap;\n    n = frames[frames.length - 1].n;\n    this.setState({heap, n, frames, currentFrame: null});\n  }\n\n  handleNextFrame = (frame) => {\n    this.setState({currentFrame: frame});\n  }\n\n  render(){\n    const {frames, currentFrame} = this.state;\n    const {width, height} = {width: 700,height: 500};\n    debugger;\n    return (<div>\n      <Operations onInsert={this.handleInsert} onDelete={this.handleDelete} />\n      {this.state.currentFrame && <KonvaContainer width={width} height={height}>\n                                      <MinHeapContainer frame={currentFrame} width={width} height={height}/>\n                                      <BinaryTreeContainer frame={currentFrame.binaryTreeFrame} width={width} top={150} />\n                                  </KonvaContainer>}\n      {currentFrame && <Pseudocode style={{width: '430px', height: '400px', float: 'left'}} text={currentFrame.pseudocode} selectedLine={currentFrame.currentLine} />}\n      {(frames.length > 0) && <Player width={1100} frames={frames} onNextFrame={this.handleNextFrame}/>}\n    </div>);\n  }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport NavigationBar from './../Navigation/NavigationBar';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {Grid} from 'react-bootstrap';\n\nimport BSTIndex from './../BinarySearchTree/BSTIndex';\nimport MinHeapIndex from './../MinHeap/MinHeapIndex';\n\nclass App extends Component {\n  render() {\n    return (<Router>\n      <div className=\"App\">\n        <NavigationBar/>\n        <Switch>\n          <Route exact={true} path=\"/data-structures-visualization/\" component={() => (<div id='app-image'>\n              <Grid><Home/></Grid>\n            </div>)}/>\n          <Route path=\"/data-structures-visualization/BinarySearchTree\" component={() => (<Grid><BSTIndex/></Grid>)}/>\n          <Route path=\"/data-structures-visualization/MinHeap\" component={() => (<Grid><MinHeapIndex/></Grid>)}/>\n          <Route path=\"/data-structures-visualization/\" component={() => (<Grid><NotFound/></Grid>)}/>\n        </Switch>\n      </div>\n    </Router>);\n  }\n}\n\nconst Home = () => (<div className='logo-container'>\n  <Link className='logo-link' to='/data-structures-visualization/BinarySearchTree'>\n    <h3>Binary Search Tree</h3>\n    <div id='bst-logo'></div>\n  </Link>\n  <Link className='logo-link' to='/MinHeap'>\n    <h3>Min Heap</h3>\n    <div id='min_heap-logo'></div>\n  </Link>\n</div>)\nconst NotFound = () => (<div>Not found</div>)\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-theme.min.css';\n\nimport App from './Components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}